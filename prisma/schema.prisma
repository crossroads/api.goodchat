// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Staff {
  id                  Int      @default(autoincrement()) @id
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt
  externalId          String   @db.VarChar(255) @unique
  displayName         String
  metadata            Json
  permissions         String[]
  staffConversations  StaffConversations[]
}

model Customer {
  id                Int       @default(autoincrement()) @id
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt @default(now())
  externalId        String?   @db.VarChar(255)
  sunshineUserId    String    @db.VarChar(255) @unique
  displayName       String
  email             String?
  avatarUrl         String?
  locale            String    @default("en")
  metadata          Json
  conversations     Conversation[]

  @@index([externalId])
}

model StaffConversations {
  staff           Staff @relation(fields: [staffId], references: [id])
  staffId         Int
  conversation    Conversation @relation(fields: [conversationId], references: [id])
  conversationId  Int
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt @default(now())

  @@id([staffId, conversationId])
}

enum ConversationType {
  PRIVATE
  PUBLIC
  CUSTOMER
}

model Conversation {
  id                        Int      @default(autoincrement()) @id
  createdAt                 DateTime @default(now())
  updatedAt                 DateTime @updatedAt
  sunshineConversationId    String?  @unique
  customerId                Int?
  customer                  Customer? @relation(fields: [customerId], references: [id])
  source                    String
  readByCustomer            Boolean  @default(false)
  type                      ConversationType
  metadata                  Json
  readReceipts              ReadReceipt[]
  messages                  Message[]
  staffConversations        StaffConversations[]

  @@index([customerId])
  @@index([source])
  @@index([type])
}

model ReadReceipt {
  id                Int           @default(autoincrement()) @id
  createdAt         DateTime      @default(now())
  updatedAt         DateTime      @updatedAt
  conversationId    Int
  conversation      Conversation  @relation(fields: [conversationId], references: [id])
  lastReadMessageId Int
  lastReadMessage   Message       @relation(fields: [lastReadMessageId], references: [id])
  userId            Int
  userType          AuthorType

  @@unique([userId, userType, conversationId])
  @@index([conversationId])
  @@index([userType, userId])
}

enum AuthorType {
  STAFF
  CUSTOMER
  SYSTEM
}

model Message {
  id                        Int         @default(autoincrement()) @id
  createdAt                 DateTime    @default(now())
  updatedAt                 DateTime    @updatedAt
  conversationId            Int
  conversation              Conversation @relation(fields: [conversationId], references: [id])
  sunshineMessageId         String?      @unique
  authorType                AuthorType
  authorId                  Int
  content                   Json
  metadata                  Json
  readReceipts              ReadReceipt[]

  @@index([conversationId])
}
